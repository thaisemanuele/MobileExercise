package com.app.jobapplication.utils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.app.jobapplication.activities.MainActivity;
import com.app.jobapplication.chargebackexercise.R;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.text.Html;
import android.util.Log;
import android.widget.FrameLayout;
import android.widget.Toast;


/**
 * General purposes methods shared by the entire application
 * @author Thais
 *
 */
public class ApplicationUtils {
	
	private static final String LOG = "ApplicationUtils";

    /**
     * Shows a toast message within the context, showing the message for a certain duration
     * @param context
     * @param message
     * @param duration
     */
	public static void showToastMessage(Context context, int message, int duration) {
		Toast toast = Toast.makeText(context, message, duration);
		toast.show();
	}

	/**
	 * Checks if the device is connected somehow to the Internet
	 * 
	 * @param context
	 * @return true/false
	 */
	public static Boolean checkConnection(Context context) {
		ConnectionDetector detector = new ConnectionDetector(context);
		if (detector.isConnected()) {
			return true;
		} else
			return false;
	}
    
	/**
	 * Constructs the JSONObject with the required structure,
	 * "comment" -> String
	 * "reason_details" -> Array<HashMap<id (String),response (Boolean)>>
	 * @param comment
	 * @param reasonArray
	 * @return
	 */
	public static JSONObject getJSONObject(String comment, ArrayList<HashMap<String, Boolean>> reasonArray) {

		try {

			JSONObject result = new JSONObject();
			JSONArray details = new JSONArray();

			HashMap<String, Boolean> innerMap = reasonArray.get(0);
			Iterator it = innerMap.entrySet().iterator();
			while (it.hasNext()) {
				Map.Entry pair = (Map.Entry) it.next();
				JSONObject obj = new JSONObject();
				obj.put("id", pair.getKey());
				obj.put("response", pair.getValue());
				details.put(obj);
			}
			result.put("comment", comment);
			result.put("reason_details", details);
			Log.d(LOG, result.toString(2));
			return result;

		} catch (JSONException e) {
			Log.e(LOG, "Unable to contruct request body");
		}
		return null;
	}
	

	/**
	 * Method for displaying the about dialogue
	 * @param activity
	 */
	public static void openAbout(Activity activity) {
		AlertDialog about = new AlertDialog.Builder(activity).setTitle(activity.getString(R.string.action_about))
				.setMessage("" + (Html.fromHtml(activity.getString(R.string.formatted_about))))
				.setPositiveButton(R.string.chargeback_confirm_close, new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {
						// do nothing
					}
				}).create();
		if (!about.isShowing()) {
			about.show();
		}
	}

}
