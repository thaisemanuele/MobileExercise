package com.app.jobapplication.chargebackexercise;

import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.net.URLEncoder;

import javax.net.ssl.HttpsURLConnection;

import org.apache.commons.io.IOUtils;
import org.json.JSONObject;

import android.util.Log;

public class ConnectionHelper {
	
	private static final String BASE_URL = "https://nu-mobile-hiring.herokuapp.com";
	private static final String ENCODING = "UTF-8";
	private static final String LOG = "ConnectionHelper";
	
	private static HttpsURLConnection getConnection(String endpoint){
		try {
			URL url = new URL(endpoint);
			HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();
			return connection;
		} catch (MalformedURLException e) {
			Log.e(LOG, "Malformed URL "+endpoint);
		} catch (IOException e) {
			Log.e(LOG, "Error Connecting to "+endpoint);
		}
		return null;
	}
	
	public static String getFromEndpoint(String url){
		if(url.isEmpty()){
			url = BASE_URL;
		}
		HttpsURLConnection connection = getConnection(url);
		if(connection!=null){
			String messageString = "";
			InputStream messageStream = null;
			try {
				messageStream = connection.getInputStream();
				messageString = IOUtils.toString(messageStream, ENCODING);
			} catch (IOException e) {
				Log.e(LOG, "Error on retrieving inputStream: "+connection.getErrorStream());
				return null;
			}
			return messageString;
		}
		Log.e(LOG, "Unable to retrieve Input Stream");
		return "";
	}
	
	public static boolean post(String url, String json){
		HttpsURLConnection connection = getConnection(url);
		connection.setDoInput(true);
		connection.setDoOutput(true);
		
		try {
			
			connection.setRequestMethod("POST");
			connection.setRequestProperty("Content-Type", "application/json");
			connection.setRequestProperty("Accept", "application/json");
			DataOutputStream outputstream = new DataOutputStream(
					connection.getOutputStream());
			OutputStreamWriter writer = new OutputStreamWriter(outputstream, ENCODING);
			writer.write(json);
			writer.flush ();
			writer.close ();
			int response = connection.getResponseCode();  
		    if(response ==HttpsURLConnection.HTTP_OK){  
		    	Log.e(LOG, "OK");
		    	return true; 

		    }else{  
		    	Log.e(LOG, connection.getResponseMessage());
		        return false;  
		    }  
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
}
